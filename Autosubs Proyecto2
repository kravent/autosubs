#El programa guarda en la variable cap el capítulo elegido por el usuario
#Pon el código que se ejectutará siempre nada más cargar el proyecto al
#principio del archivo antes de ninguna etiqueta y antes de elegir
#el capítulo (por lo que la varíable capitulo todavía no está disponible)

#Variables por defecto
serie -> nombre de la serie
dir -> directorio del proyecto
subdirs -> subdirectorios a crear en la carpeta de cada capítulo

fansubfrom -> fansub que hace la versión original
size -> resolución el video de origen (EJ: 720)
patrones -> otras expresiones regulares para buscar el vídeo
fps -> fps del vídeo de origen en punto flotante
langin -> idioma del video de origen

langout -> idioma del video final
fansub -> fansub propio
fansubs -> siglas del fansub propio

#Separa el código por secciones que luego puedes ejecutar por separado
label ETIQUETA
#Crea una nueva variable
tovar(var, valor)
#Devuelve el valor de la variable var, o si no exixte valor_por_defecto
getvar(var, [valor_por_defecto])
#Pausa hasta que el usuario presione continuar
pausa()
#Ejecuta otra etiqueta y luego continua por donde estaba
ejectutar(etiqueta)
#Espera a que se publique el archivo y lo descarga
wait_and_download(size=None, otros_patrones=None)
#Extrae el vídeo limpio sin adjuntos especificandole los fps si están definidos
extractraw(file_from, raw_file)
#Extrae el archivo de subtitulos del vídeo
extractass(file_from, ass_file)
#Traduce un archivo ass
asstranslate(ass_from, ass_to, lang_from='en', lang_to='es')
#Elimina estilos del ass dejando por defecto lo indicado
assdefaultstyle(ass_file, fontname='Arial', fontsize='30', \
    primarycolour='&H00FFFFFF', secondarycolour='&H000000FF', \
    outlinecolour='&H00000000', backcolour='&H00000000', bold='-1', \
    italic='0', underline='0', strikeout='0', scalex='100', scaley='100', \
    spacing='1', angle='0', borderstyle='1', outline='2', shadow='0', \
    alignment='2', marginl='15', marginr='30', marginv='15', encoding='1')











